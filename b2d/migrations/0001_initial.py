# Generated by Django 5.1 on 2024-11-11 09:09

import b2d.models.business
import b2d.models.investment
import b2d.models.investor
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('business_registration_certificate', models.FileField(upload_to=b2d.models.business.business_registration_certificate_path)),
                ('tax_identification_number', models.FileField(upload_to=b2d.models.business.tax_identification_number_path)),
                ('proof_of_address', models.FileField(upload_to=b2d.models.business.proof_of_address_path)),
                ('financial_statements', models.FileField(blank=True, null=True, upload_to=b2d.models.business.financial_statements_path)),
                ('ownership_documents', models.FileField(upload_to=b2d.models.business.ownership_documents_path)),
                ('director_identification', models.FileField(upload_to=b2d.models.business.director_identification_path)),
                ('licenses_and_permits', models.FileField(blank=True, null=True, upload_to=b2d.models.business.licenses_and_permits_path)),
                ('bank_account_details', models.FileField(upload_to=b2d.models.business.bank_account_details_path)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b2d.category')),
            ],
            options={
                'verbose_name': 'Business',
                'verbose_name_plural': 'Businesses',
            },
            bases=('b2d.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('financial_statements', models.FileField(upload_to=b2d.models.investor.investor_document_path)),
            ],
            options={
                'verbose_name': 'Investor',
                'verbose_name_plural': 'Investors',
            },
            bases=('b2d.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when consent was given')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Consent',
                'verbose_name_plural': 'User Consents',
            },
        ),
        migrations.CreateModel(
            name='FundRaising',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('goal_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('publish_date', models.DateField()),
                ('deadline_date', models.DateField()),
                ('minimum_investment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shares_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('fundraising_status', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('wait', 'Wait')], default='wait', max_length=10)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='b2d.business')),
            ],
            options={
                'verbose_name': 'Fundraising',
                'verbose_name_plural': 'Fundraisings',
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shares_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('transaction_slip', models.FileField(null=True, upload_to=b2d.models.investment.transaction_slip_upload_path)),
                ('investment_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('investment_status', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('wait', 'Wait')], default='wait', max_length=10)),
                ('fundraise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='b2d.fundraising')),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='b2d.investor')),
            ],
            options={
                'verbose_name': 'Investment',
                'verbose_name_plural': 'Investments',
            },
        ),
    ]
